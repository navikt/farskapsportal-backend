server:
  forward-headers-strategy: framework
  shutdown: graceful

spring:
  devtools.add-properties: false

springdoc:
  packages-to-scan: { no.nav.farskapsportal.backend.apps.api.provider.rs }
  show-login-endpoint: true
  swagger-ui:
    path: /swagger-ui.html
    url: /v3/api-docs

management.metrics.distribution.percentiles-histogram.http.server.requests: true
management.metrics.distribution.percentiles-histogram.http.client.requests: true

virksomhetssertifikat:
  prosjektid: ${VIRKSOMHETSSERTIFIKAT_PROSJEKT_ID}
  hemmelighetnavn: ${VIRKSOMHETSSERTIFIKAT_HEMMELIGHET_NAVN}
  hemmelighetversjon: ${VIRKSOMHETSSERTIFIKAT_HEMMELIGHET_VERSJON}
  passord:
    prosjektid: ${VIRKSOMHETSSERTIFIKAT_PASSORD_PROSJEKT_ID}
    hemmelighetnavn: ${VIRKSOMHETSSERTIFIKAT_PASSORD_HEMMELIGHET_NAVN}
    hemmelighetversjon: ${VIRKSOMHETSSERTIFIKAT_PASSORD_HEMMELIGHET_VERSJON}

farskapsportal:
  egenskaper:
    brukernotifikasjoner-paa: true
    kryptering-paa: ${FILKRYPTERING_PAA}
    min-antall-uker-til-termindato: -3
    maks-antall-uker-til-termindato: 21
    nav-orgnummer: 889640782
    kontroll-far-forsoek-fornyes-etter-antall-dager: 1
    kontroll-far-maks-antall-forsoek: 3
    esignering:
      innhente-status-ved-polling: false
      suksess-url: ${ESIGNERING_SUKSESS_URL}
      avbrutt-url: ${ESIGNERING_AVBRUTT_URL}
      feilet-url: ${ESIGNERING_FEILET_URL}
  asynkron.egenskaper:
    oppdatere-signeringsstatus-min-antall-timer-etter-far-ble-sendt-til-signering: 1
    brukernotifikasjon:
      oppgavestyringsintervall: ${OPPGAVESTYRINGSINTERVALL}
      oppgavestyringsforsinkelse: ${OPPGAVESTYRINGSFORSINKELSE}
      varsle-om-uferdig-erklaering-cron: ${VARSLE_OM_UFERDIG_ERKLAERING_CRON}
      varsle-om-manglendeSigneringEtterAntallDager: ${VARSLE_OM_MANGLENDE_SIGNERING_ETTER_ANTALL_DAGER}
    arkiv:
      arkiveringsintervall: ${ARKIVERINGSINTERVALL}
      arkiveringsforsinkelse: ${ARKIVERINGSFORSINKELSE}
      deaktiveringsrate: ${DEAKTIVERINGSRATE}
      dokumentslettingsrate: ${DOKUMENTSLETTINGSRATE}
      levetid-ikke-ferdigstilte-signeringsoppdrag-i-dager: 40
      levetid-oversendte-farskapserklaeringer-i-dager: ${DEAKTIVERE_OVERSENDTE_ERKLAERINGER_ETTER_ANTALL_DAGER}
      levetid-erklaeringer-ikke-signert-av-mor-i-dager: 1
      maks-antall-feil-paa-rad: 3
    oppgave:
      maks-antall-oppgaver-per-dag: 10
      vurdere-opprettelse: ${VURDERE_OPPGAVE_INTERVALL}

management:
  endpoints.web:
    exposure.include: info, health, metrics, prometheus
    base-path: /internal/actuator
  endpoint.health.show-details: always

url:
  farskapsportal:
    url: ${FARSKAPSPORTAL_URL}
  pdl-api:
    base-url: ${PDL_URL}
    graphql: /graphql
  oppgave:
    base-url: ${OPPGAVEAPI_URL}
    opprette: /api/v1/oppgaver
  skatt:
    base-url: ${SKATT_URL}
    registrering-av-farskap: /folkeregisteret/mottak/api/registrering_av_farskap_v1.vedlegg

farskapsportal-api:
  disable-esignering: false

no.nav.security.jwt:
  expirythreshold: 1
  client:
    registration:
      pdl-api:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: api://${PDL_SCOPE}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_post
      oppgave-api:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: api://${OPPGAVE_SCOPE}/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
  issuer:
    aad:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted_audience: ${AZURE_APP_CLIENT_ID}, api://${AZURE_APP_CLIENT_ID}
    tokenx:
      discoveryurl: ${TOKEN_X_WELL_KNOWN_URL}
      accepted_audience: ${TOKEN_X_CLIENT_ID}

---
spring:
  cloud.gcp.secretmanager.project-id: ${VIRKSOMHETSSERTIFIKAT_PROSJEKT_ID}
  config.activate.on-profile: live, integration-test
  cloud.gcp.sql.database-name: ${DB_DATABASE}
  cloud.gcp.sql.instance-connection-name: "${GCP_TEAM_PROJECT_ID}:europe-north1:${DB_USERNAME}"
  datasource:
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}?user=${DB_USERNAME}&password=${DB_PASSWORD}
    hikari:
      idle-timeout: 10001
      max-lifetime: 30001
      connectionTimeout: 1000
      maximum-pool-size: 10
      minimum-idle: 1
  flyway:
    enabled: false
    locations: classpath:/db/migration
    placeholders:
      user: ${DB_USER_ASYNKRON}
  jpa:
    hibernate:
      connection.provider_class: org.hibernate.hikaricp.internal.HikariCPConnectionProvider
      ddl-auto: none
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc.lob.non_contextual_creation: true

---
### H2 ###
spring:
  config.activate.on-profile: test, local, skatt-ssl-test, scheduled-test
  flyway.enabled: false
  datasource:
    url: jdbc:h2:mem:default
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  data.jpa.repositories.bootstrap-mode: default
  h2.console.enabled: true
  jpa:
    hibernate.ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        jdbc.lob.non_contextual_creation: true
  sql.init.mode: always

DB_PASSWORD: 123
DB_USERNAME: sa

---
### POSTGRES ###
spring:
  config.activate.on-profile: local-postgres
  # Oppsett for flyway med hikari og postgres
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://localhost:5432/p2
    databaseName: p2
    portNumber: 5432
    serverName: localhost
    hikari:
      idle-timeout: 10001
      max-lifetime: 30001
      connectionTimeout: 1000
      maximum-pool-size: 10
      minimum-idle: 1
  flyway:
    enabled: false
    flyway.locations: classpath:/db/migration
  jpa:
    hibernate.connection.provider_class: org.hibernate.hikaricp.internal.HikariCPConnectionProvider
    database-platform: org.hibernate.dialect.PostgreSQLDialect

---
spring:
  config.activate.on-profile: test, local, local-postgres, remote-postgres
  main.allow-bean-definition-overriding: true

APPNAVN: farskapsportal-api
INTEGRATION_TEST_CONTROLLER_PAA: true
########## Mock props ##########
WIREMOCK_URL: http://localhost:${wiremock.server.port}
FARSKAPSPORTAL_URL: https://farskapsportal.dev.nav.no/
FILKRYPTERING_PAA: true
ESIGNERING_SUKSESS_URL: localhost:8082/esignering/suksess
ESIGNERING_AVBRUTT_URL: localhost:8082/esignering/avbrutt
ESIGNERING_FEILET_URL: localhost:8082/esignering/feilet
KAFKA_BROKERS: 127.0.0.1:9092
KAFKA_SCHEMA_REGISTRY: http://localhost:8081
NAV_TRUSTSTORE_PATH: certs/server-selfsigned.jks
NAV_TRUSTSTORE_PASSWORD: qwer1234
NAIS_CLUSTER_NAME: dev
DEAKTIVERINGSRATE: "1 * * * * ?"
DEAKTIVERE_OVERSENDTE_ERKLAERINGER_ETTER_ANTALL_DAGER: 1
SKATT_URL: http://localhost:8080
AZURE_OPENID_CONFIG_TOKEN_ENDPOINT: http://localhost:${mock-oauth2-server.port}/aad/token
TOKEN_X_WELL_KNOWN_URL:  http://localhost:${mock-oauth2-server.port}/tokenx/.well-known/openid-configuration
TOKEN_X_CLIENT_ID: aud-localhost
AZURE_APP_WELL_KNOWN_URL: http://localhost:${mock-oauth2-server.port}/aad/.well-known/openid-configuration
AZURE_APP_CLIENT_ID: aud-localhost
GCP_KMS_KEY_PATH: gcp-kms://localhost


url:
  pdl-api.base-url: ${WIREMOCK_URL}
  oppgave.base-url: ${WIREMOCK_URL}

farskapsportal-api.systembruker.passord: se-vault

---
spring:
  config.activate.on-profile: test

server.port: 8080

BRUKERNOTIFIKASJON_PAA: true

---
spring:
  config.activate.on-profile: local, local-postgres, remote-postgres, integration-test
  flyway.enabled: false

BRUKERNOTIFIKASJON_PAA: false

---
spring:
  config.activate.on-profile: local, test, local-postgres, remote-postgres
  flyway.enabled: false

ESIGNERING_SUKSESS_URL: "http://localhost:8080/all-good"
ESIGNERING_AVBRUTT_URL: "http://localhost:8080/f.this"
ESIGNERING_FEILET_URL: "http://localhost:8080/damn"

# Lar wiremock h√•ndtere esignering
farskapsportal-api.disable-esignering: false

url.esignering: ${WIREMOCK_URL}

spring.kafka.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: farskapsportal
spring.kafka.consumer.auto-offset-reset: earliest

---

spring.config.activate.on-profile: test, scheduled-test, skatt-ssl-test
farskapsportal.asynkron.egenskaper.arkiv.arkiveringsintervall: 600
farskapsportal.asynkron.egenskaper.arkiv.arkiveringsforsinkelse: 200
farskapsportal.asynkron.egenskaper.arkiv.dokumentslettingsrate:  "* * 1 * * ?"
farskapsportal.asynkron.egenskaper.brukernotifikasjon.oppgavestyringsforsinkelse: 1
farskapsportal.asynkron.egenskaper.brukernotifikasjon.oppgavestyringsintervall: "* * 1 * * ?"
farskapsportal.asynkron.egenskaper.brukernotifikasjon.varsle-om-uferdig-erklaering-cron: "* * 1 * * ?"
farskapsportal.asynkron.egenskaper.oppgave.vurdere-opprettelse: "* * 1 * * ?"
---

spring.config.activate.on-profile: local

farskapsportal.asynkron.egenskaper.arkiv.arkiveringsintervall: 600
farskapsportal.asynkron.egenskaper.arkiv.arkiveringsforsinkelse: 200
farskapsportal.asynkron.egenskaper.brukernotifikasjon.oppgavestyringsforsinkelse: 1
farskapsportal.asynkron.egenskaper.brukernotifikasjon.oppgavestyringsintervall: "0 0/30 * * * ?"
farskapsportal.asynkron.egenskaper.brukernotifikasjon.varsle-om-uferdig-erklaering-cron: "0 0/30 * * * ?"
farskapsportal.asynkron.egenskaper.oppgave.vurdere-opprettelse: "* * 1 * * ?"

# Lokal profil bruker selvstendige wiremocks
wiremock.server:
  port: 0
  files: classpath:/__files
  stubs: classpath:/mappings
---
spring:
  config.activate.on-profile: local-postgres, remote-postgres

WIREMOCK_URL: http://localhost:${wiremock.server.port}
KAFKA_BROKERS: 127.0.0.1:9092
KAFKA_SCHEMA_REGISTRY: http://localhost:8080
BRUKERNOTIFIKASJON_PAA: false
NAIS_CLUSTER_NAME: dev-gcp
ARKIVERINGSINTERVALL: 600000000
OPPGAVESTYRINGSFORSINKELSE: 100000000
INTEGRATION_TEST_CONTROLLER_PAA: true

url:
  pdl-api.base-url: ${WIREMOCK_URL}

farskapsportal-api:
  systembruker.passord: se-vault

wiremock.server:
  port: 0
  files: classpath:/__files
  stubs: classpath:/mappings
---
spring:
  config.activate.on-profile: remote-postgres
  flyway:
    enabled: false
    locations: classpath:/db/migration
  datasource:
    username: ${REMOTE_POSTGRES_USER}
    url: jdbc:postgresql://127.0.0.1:5433/fpdb-feature
    password: ${REMOTE_POSTGRES_PWD}
    databaseName: fpdb-feature

APPNAVN: farskapsportal-api-feature

---
# Integrasjonstesting mot Posten
spring:
  config.activate.on-profile: integration-test

url:
  esignering: https://api.difitest.signering.posten.no/api

virksomhetssertifikat:
  prosjektid: 719909854975
  hemmelighetnavn: test-virksomhetssertifikat-lokal-test-jceks_2021-2024
  hemmelighetversjon: 1
  passord:
    prosjektid: 627047445397
    hemmelighetnavn: farskap-keystore-credentials-json
    hemmelighetversjon: 2

wiremock.server:
  port: 0
  files: classpath:/__files
  stubs: classpath:/mappings

---
spring:
  config.activate.on-profile: integration-test

DB_DATABASE: fpdb-main
POSTGRES_CONNECTION_NAME: farskapsportal-dev-169c:europe-north1:fp-main
SKATT_URL: https://folkeregisteret-api-ekstern.sits.no
WIREMOCK_URL: http://localhost

farskapsportal.asynkron.egenskaper.arkiv.arkiveringsintervall: 6000000
farskapsportal.asynkron.egenskaper.arkiv.arkiveringsforsinkelse: 2000000
farskapsportal.asynkron.egenskaper.brukernotifikasjon.oppgavestyringsforsinkelse: 1
farskapsportal.asynkron.egenskaper.brukernotifikasjon.oppgavestyringsintervall: "* * 1 * * ?"
farskapsportal.asynkron.egenskaper.brukernotifikasjon.varsle-om-uferdig-erklaering-cron: "* * 1 * * ?"
farskapsportal.asynkron.egenskaper.oppgave.vurdere-opprettelse: "* * 1 * * ?"

url:
  pdl-api.base-url: ${WIREMOCK_URL}
  oppgave.base-url: ${WIREMOCK_URL}

---

spring.config.activate.on-profile: integration-test2

no.nav:
  security.jwt.issuer.tokenx:
    discoveryurl: https://navtestb2c.b2clogin.com/navtestb2c.onmicrosoft.com/v2.0/.well-known/openid-configuration?p=B2C_1A_idporten_ver1
    accepted_audience: 0090b6e1-ffcc-4c37-bc21-049f7d1f0fe5
